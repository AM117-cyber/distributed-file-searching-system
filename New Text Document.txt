melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker build -t serverimage -f server.
server.Dockerfile          server.py                  server.py:Zone.Identifier
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker build -t serverimage -f server.
server.Dockerfile          server.py                  server.py:Zone.Identifier
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker build -t serverimage -f server.
server.Dockerfile          server.py                  server.py:Zone.Identifier
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker build -t serverimage -f server.Dockerfile .
[+] Building 1.6s (2/2) FINISHED                                                                         docker:default
 => [internal] load build definition from server.Dockerfile                                                        0.2s
 => => transferring dockerfile: 136B                                                                               0.0s
 => ERROR [internal] load metadata for docker.io/library/python:3-11                                               1.2s
------
 > [internal] load metadata for docker.io/library/python:3-11:
------
server.Dockerfile:1
--------------------
   1 | >>> From python:3-11
   2 |     WORKDIR /app
   3 |     COPY server.py ./server.py
--------------------
ERROR: failed to solve: python:3-11: unexpected status from HEAD request to https://registry-1.docker.io/v2/library/python/manifests/3-11: 403 Forbidden
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ ls
'CP 2'                     client.py                   images.zip:Zone.Identifier   server.py
 CP2.zip                   client.py:Zone.Identifier   my-client-image.tar          server.py:Zone.Identifier
 CP2.zip:Zone.Identifier   docker_setup                my-server-image.tar
 client.Dockerfile         images.zip                  server.Dockerfile
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker load -i my-client-image.tar
98b5f35ea9d3: Loading layer [==================================================>]  77.83MB/77.83MB
835db2ba7b13: Loading layer [==================================================>]  9.551MB/9.551MB
317c644d5100: Loading layer [==================================================>]  47.48MB/47.48MB
865cca643298: Loading layer [==================================================>]   5.12kB/5.12kB
b0ec5a0bbb45: Loading layer [==================================================>]  1.536kB/1.536kB
629ce1897287: Loading layer [==================================================>]   2.56kB/2.56kB
Loaded image: my-client-image:latest
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker load -i my-server-image.tar
439be7e93e33: Loading layer [==================================================>]   2.56kB/2.56kB
Loaded image: my-server-image:latest
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker images
REPOSITORY        TAG       IMAGE ID       CREATED       SIZE
my-client-image   latest    c4f9ed3ae05f   2 weeks ago   130MB
my-server-image   latest    d69798ab6a02   2 weeks ago   130MB
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker run -d --name myserver my-server-image.tar
Unable to find image 'my-server-image.tar:latest' locally
docker: Error response from daemon: pull access denied for my-server-image.tar, repository does not exist or may require 'docker login': denied: <html><body><h1>403 Forbidden</h1>
Since Docker is a US company, we must comply with US export control regulations. In an effort to comply with these, we now block all IP addresses that are located in Cuba, Iran, North Korea, Regions of Ukraine (Crimea, Donetsk, and Luhansk), Sudan, Syria, and Russia. If you are not in one of these cities, countries, or regions and are blocked, please reach out to https://hub.docker.com/support/contact/
</body></html>.
See 'docker run --help'.
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker run -d --name myserver my-server-image
ad7cf371c1b2d2480f99e78fd29e9c9e02348bd1fbb4e090250319c6fd37a4fb
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker run -d --name myclient my-client-image
43e118b09039f806603dbdc6e88329b5b67b4dd88a85ae53914a680314e960aa
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker ps -a
CONTAINER ID   IMAGE             COMMAND                CREATED          STATUS                      PORTS     NAMES
43e118b09039   my-client-image   "python ./client.py"   35 seconds ago   Exited (1) 29 seconds ago             myclient
ad7cf371c1b2   my-server-image   "python ./server.py"   52 seconds ago   Up 51 seconds                         myserver
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker logs -f myclient
Traceback (most recent call last):
  File "/app/./client.py", line 3, in <module>
    sock.connect(('server', 8080))
socket.gaierror: [Errno -2] Name or service not known
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker logs -f server myserver
"docker logs" requires exactly 1 argument.
See 'docker logs --help'.

Usage:  docker logs [OPTIONS] CONTAINER

Fetch the logs of a container
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker logs -f myserver
^C
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker logs -itd myserver
unknown shorthand flag: 'i' in -itd
See 'docker logs --help'.
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker logs --help

Usage:  docker logs [OPTIONS] CONTAINER

Fetch the logs of a container

Aliases:
  docker container logs, docker logs

Options:
      --details        Show extra details provided to logs
  -f, --follow         Follow log output
      --since string   Show logs since timestamp (e.g. "2013-01-02T13:23:37Z") or relative (e.g. "42m" for 42 minutes)
  -n, --tail string    Number of lines to show from the end of the logs (default "all")
  -t, --timestamps     Show timestamps
      --until string   Show logs before a timestamp (e.g. "2013-01-02T13:23:37Z") or relative (e.g. "42m" for 42
                       minutes)
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker network create clients --subnet 10.0.10.0/24
1ec6a832852efc8222bd4ab4cc8c8b6343f88438d8057e59d7d641b51353db6a
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ docker network create servers --subnet 10.0.11.0/24
d7374dab9fa6739ce4072d194f1a88e6bf5f0a52aff3eca84fd8a57c063a3d6a
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ ls
'CP 2'                     client.py                   images.zip:Zone.Identifier   server.py
 CP2.zip                   client.py:Zone.Identifier   my-client-image.tar          server.py:Zone.Identifier
 CP2.zip:Zone.Identifier   docker_setup                my-server-image.tar
 client.Dockerfile         images.zip                  server.Dockerfile
melissa@DESKTOP-NMILVVL:~/SD/CP 2$ cd docker_setup/
melissa@DESKTOP-NMILVVL:~/SD/CP 2/docker_setup$ docker build -t router -f router/router.Dockerfile
ERROR: "docker buildx build" requires exactly 1 argument.
See 'docker buildx build --help'.

Usage:  docker buildx build [OPTIONS] PATH | URL | -

Start a build
melissa@DESKTOP-NMILVVL:~/SD/CP 2/docker_setup$ docker build -t router -f router/router.Dockerfile .
[+] Building 0.8s (2/2) FINISHED                                                                         docker:default
 => [internal] load build definition from router.Dockerfile                                                        0.1s
 => => transferring dockerfile: 147B                                                                               0.0s
 => ERROR [internal] load metadata for docker.io/library/alpine:latest                                             0.4s
------
 > [internal] load metadata for docker.io/library/alpine:latest:
------
router.Dockerfile:1
--------------------
   1 | >>> from alpine
   2 |
   3 |     run echo "net.ipv4.ip_forward=1" | tee -a /etc/sysctl.conf
--------------------
ERROR: failed to solve: alpine: unexpected status from HEAD request to https://registry-1.docker.io/v2/library/alpine/manifests/latest: 403 Forbidden
melissa@DESKTOP-NMILVVL:~/SD/CP 2/docker_setup$


















